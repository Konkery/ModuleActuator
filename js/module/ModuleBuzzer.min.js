class ClassBuzzer extends ClassMiddleActuator{constructor(_actuatorProps,_opts){this.name="ClassBuzzer",ClassMiddleActuator.apply(this,[_actuatorProps,_opts]),this._Channels[0]._DataRefine.SetLim(200,5e3);const make_sound=this.MakeSound.bind(this);this.MakeSound=(_freq,_opts)=>{const opts={pulseDur:_opts.pulseDur||100,numRep:_opts.numRep||1,prop:_opts.prop||.5};return["numRep","pulseDur","prop"].forEach(property=>{if("number"!=typeof opts[property]||opts[property]<0)throw new Error("Invalid args")}),opts.prop=E.clip(opts.prop,0,1),opts.pulseDur=E.clip(opts.pulseDur,0,2147483647),make_sound(_freq,opts)},this.InitTasks()}static get ERROR_CODE_ARG_VALUE(){return 10}static get ERROR_MSG_ARG_VALUE(){return`ERROR>> invalid data. ClassID: ${this.name}`}InitTasks(){const beep_once=function(freq,dur){return this.MakeSound(freq,{numRep:1,pulseDur:dur||1e3,prop:.5})},beep_twice=(freq,dur)=>this.MakeSound(freq,{numRep:2,pulseDur:dur||500,prop:.5}),beep_5sec=freq=>this.MakeSound(freq,{numRep:1,pulseDur:5e3,prop:.5});this._Channels[0].AddTask("BeepOneLong",beep_once),this._Channels[0].AddTask("BeepTwice",beep_twice),this._Channels[0].AddTask("Beep5Sec",beep_5sec)}On(_chNum,_arg){this._IsChOn[_chNum]&&this.Off();let freq=_arg;analogWrite(this._Pins[0],.5,{freq:freq})}Off(){digitalWrite(this._Pins[0],1),this._IsChOn[0]=!1}MakeSound(_arg,_opts,_task){let Thi=_opts.pulseDur,Tlo=Math.floor(_opts.pulseDur*(1-_opts.prop)/_opts.prop);this._Count=2*_opts.numRep;let beep_flag=!0;this._IsChOn[0]=!0;let beep_func=()=>{--this._Count,this._Count>0?(beep_flag?(digitalWrite(this._Pins[0],beep_flag),setTimeout(beep_func,Tlo)):(this.On(0,_arg),setTimeout(beep_func,Thi)),beep_flag=!beep_flag):(this._IsChOn[0]=!1,_task&&_task.Resolve(0))};this.On(0,_arg),setTimeout(beep_func,Thi)}Cancel(){this._Count=0,this.Off()}}exports=ClassBuzzer;