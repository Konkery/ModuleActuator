class ClassBuzzer extends ClassMiddleActuator{constructor(_actuatorProps,_opts){this.name="ClassBuzzer",ClassMiddleActuator.apply(this,[_actuatorProps,_opts]),this._Channels[0]._DataRefine.SetLim(200,5e3),this.InitTasks()}static get ERROR_CODE_ARG_VALUE(){return 10}static get ERROR_MSG_ARG_VALUE(){return`ERROR>> invalid data. ClassID: ${this.name}`}InitTasks(){this._Channels[0].AddTask("PlaySound",_opts=>{const opts=this.GetValidatedOpts(_opts),freq=opts.freq;let Thi=opts.pulseDur,Tlo=Math.floor(opts.pulseDur*(1-opts.prop)/opts.prop);count=2*opts.numRep;let beep_flag=!0,beep_func=()=>{--count,count>0?(beep_flag?(this.Off(),this._Interval=setTimeout(beep_func,Tlo)):(this.On(0,freq),this._Interval=setTimeout(beep_func,Thi)),beep_flag=!beep_flag):this.GetActiveTask().Resolve(0)};this.On(0,freq),this._Interval=setTimeout(beep_func,Thi)}),this._Channels[0].AddTask("BeepOnce",(freq,dur)=>{this._Tasks.PlaySound.Invoke({freq:freq,numRep:1,pulseDur:dur,prop:.5},"BeepOnce")}),this._Channels[0].AddTask("BeepTwice",(freq,dur)=>this._Channels[0]._Tasks.PlaySound.Invoke({freq:freq,numRep:2,pulseDur:dur,prop:.5},"BeepTwice"))}On(_chNum,_arg){this._IsChOn[_chNum]&&this.Off();let freq=_arg;analogWrite(this._Pins[0],.5,{freq:freq})}Off(){digitalWrite(this._Pins[0],1),this._IsChOn[0]=!1}GetValidatedOpts(_opts){return["freq","numRep","pulseDur","prop"].forEach(property=>{if("number"!=typeof _opts[property]||_opts[property]<0)throw new Error("Invalid args")}),_opts.prop=E.clip(_opts.prop,0,1),_opts.pulseDur=E.clip(_opts.pulseDur,0,2147483647),_opts}}exports=ClassBuzzer;